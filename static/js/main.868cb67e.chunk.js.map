{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","this","window","setInterval","current","setState","console","info","toUTCString","slice","clearInterval","name","props","className","React","Component","getRandomName","value","now","toString","App","clockName","hasClock","clockNameId","contextMenuHandler","event","preventDefault","leftMouseClickHandler","addEventListener","_prevProp","prevState","debug","removeEventListener","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,IAAMC,EAAU,IAAIL,KAEpB,EAAKM,SAAS,CACZP,MAAOM,IAITE,QAAQC,KAAKH,EAAQI,cAAcC,OAAO,IAAK,MAC9C,OAjBP,kCAoBE,WACEP,OAAOQ,cAAcT,KAAKD,WArB9B,oBAwBE,WACE,IAAQW,EAASV,KAAKW,MAAdD,KACAb,EAAUG,KAAKJ,MAAfC,MAER,OACE,sBAAKe,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGf,EAAMU,cAAcC,OAAO,IAAK,YArC3C,GAA2BK,IAAMC,WCNjC,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWV,OAAO,GAE3C,MAAM,SAAN,OAAgBQ,GAQX,IAAMG,EAAb,4MACEvB,MAAQ,CACNwB,UAAW,UACXC,UAAU,GAHd,EAMEC,YAAc,EANhB,EAmCEC,mBAAqB,SAACC,GACpBA,EAAMC,iBAEN,EAAKrB,SAAS,CACZiB,UAAU,KAvChB,EA2CEK,sBAAwB,SAACF,GACvBA,EAAMC,iBAEN,EAAKrB,SAAS,CACZiB,UAAU,KA/ChB,uDAQE,WAAqB,IAAD,OAClBrB,KAAKsB,YAAcrB,OAAOC,aAAY,WACpC,EAAKE,SAAS,CACZgB,UAAWL,QAEZ,MAEHd,OAAO0B,iBAAiB,cAAe3B,KAAKuB,oBAC5CtB,OAAO0B,iBAAiB,QAAS3B,KAAK0B,yBAhB1C,gCAmBE,SAAmBE,EAAeC,GAE9BA,EAAUT,YAAcpB,KAAKJ,MAAMwB,WAChCpB,KAAKJ,MAAMyB,UAGdhB,QAAQyB,MAAR,uBAA8BD,EAAUT,UAAxC,eAAwDpB,KAAKJ,MAAMwB,cAzBzE,kCA6BE,WACEnB,OAAOQ,cAAcT,KAAKsB,aAC1BrB,OAAO8B,oBAAoB,cAAe/B,KAAKuB,oBAC/CtB,OAAO8B,oBAAoB,QAAS/B,KAAK0B,yBAhC7C,oBAmDE,WACE,MAAgC1B,KAAKJ,MAA7BwB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAEnB,OACE,sBAAKT,UAAU,MAAf,UACE,6CAECS,GAAY,cAAC,EAAD,CAAOX,KAAMU,WA1DlC,GAAyBP,IAAMC,WCZ/BkB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.868cb67e.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  today: Date;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const current = new Date();\n\n      this.setState({\n        today: current,\n      });\n\n      // eslint-disable-next-line no-console\n      console.info(current.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { name } = this.props;\n    const { today } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string;\n  hasClock: boolean;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  clockNameId = 0;\n\n  componentDidMount() {\n    this.clockNameId = window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n\n    window.addEventListener('contextmenu', this.contextMenuHandler);\n    window.addEventListener('click', this.leftMouseClickHandler);\n  }\n\n  componentDidUpdate(_prevProp: {}, prevState: Readonly<State>) {\n    if (\n      prevState.clockName !== this.state.clockName\n      && this.state.hasClock\n    ) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.clockNameId);\n    window.removeEventListener('contextmenu', this.contextMenuHandler);\n    window.removeEventListener('click', this.leftMouseClickHandler);\n  }\n\n  contextMenuHandler = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({\n      hasClock: false,\n    });\n  };\n\n  leftMouseClickHandler = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({\n      hasClock: true,\n    });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}